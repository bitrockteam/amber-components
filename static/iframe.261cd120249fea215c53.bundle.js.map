{"version":3,"file":"static/iframe.261cd120249fea215c53.bundle.js","sources":["webpack:///./src/components/tabs/tab-content.ts","webpack:///./src/components/tabs/index.ts","webpack:///./src/components/card/index.ts","webpack:///./src/components/card/parts.ts","webpack:///./src/components/button/index.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AmberElement, html, property, customElement } from '../../libs/amber-element';\nexport const TagName = 'amber-tab-content';\nlet TabContent = class TabContent extends AmberElement {\n    constructor() {\n        super(...arguments);\n        this.visible = false;\n    }\n    render() {\n        return html `\n      ${this.visible ? html `<slot></slot>` : ''}\n    `;\n    }\n};\n__decorate([\n    property({ type: Boolean })\n], TabContent.prototype, \"visible\", void 0);\nTabContent = __decorate([\n    customElement(TagName)\n], TabContent);\nexport { TabContent };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AmberElement, html, property, customElement } from '../../libs/amber-element';\nimport { classMap } from 'lit-html/directives/classMap';\nimport styles from './style.scss';\nimport { TagName as TabContent } from './tab-content';\nlet Tabs = class Tabs extends AmberElement {\n    constructor() {\n        super(...arguments);\n        this.labels = 'First,Second';\n        this.active = 0;\n        this.fitted = false;\n    }\n    _showTab(index) {\n        const tabs = this.querySelectorAll(TabContent);\n        tabs.forEach((e, i) => i === index ? e.setAttribute('visible', '') : e.removeAttribute('visible'));\n    }\n    _setActive(evt) {\n        evt.preventDefault();\n        const index = parseInt(evt.target.dataset.index);\n        this.active = index;\n        this._showTab(index);\n        this.triggerEvent('change', { active: index });\n    }\n    render() {\n        this._showTab(this.active);\n        const classes = {\n            'fitted': this.fitted\n        };\n        const labels = this.labels.split(',') || [];\n        return html `\n      ${this.setStyles(styles)}\n      \n      <section \n        class=${classMap(classes)}\n      >\n        <ul>\n          ${labels.map((e, i) => html `\n            <li\n              class=${this.active === i ? 'active' : ''}\n            >\n              <a \n                href=\"#\"\n                data-index=${i}\n                @click=${(event) => this._setActive(event)}\n              >${e}</a>\n            </li>\n          `)}\n        </ul>\n        <slot></slot>\n      </section>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], Tabs.prototype, \"labels\", void 0);\n__decorate([\n    property({ type: Number })\n], Tabs.prototype, \"active\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Tabs.prototype, \"fitted\", void 0);\nTabs = __decorate([\n    customElement('amber-tabs')\n], Tabs);\nexport { Tabs };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AmberElement, html, property, customElement } from '../../libs/amber-element';\nimport { taxonomy, media } from './parts';\nimport styles from './style.scss';\nlet Card = class Card extends AmberElement {\n    constructor() {\n        super(...arguments);\n        this.title = 'Card title';\n        this.taxonomy = '';\n        this.media = '';\n    }\n    render() {\n        return html `\n      ${this.setStyles(styles)}\n      \n      <section \n        class=\"card\"\n      >\n        ${media(this.media, this.title)}\n        ${taxonomy(this.taxonomy)}\n        <h3>${this.title}</h3>\n        <slot></slot>\n      </section>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], Card.prototype, \"title\", void 0);\n__decorate([\n    property({ type: String })\n], Card.prototype, \"taxonomy\", void 0);\n__decorate([\n    property({ type: String })\n], Card.prototype, \"media\", void 0);\nCard = __decorate([\n    customElement('amber-card')\n], Card);\nexport { Card };\n","import { html } from 'lit-html';\nconst taxonomy = (value) => value && value.length ? html `<h4>${value}</h4>` : html ``;\nconst media = (value, title) => value && value.length ? html `\n    <figure>\n      <img \n        src=${value} \n        alt=${title}\n      >\n    </figure>\n  ` : html ``;\nexport { taxonomy, media };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AmberElement, html, property, customElement, } from '../../libs/amber-element';\nimport { classMap } from 'lit-html/directives/classMap';\nimport styles from './style.scss';\nlet Button = class Button extends AmberElement {\n    constructor() {\n        super(...arguments);\n        this.priority = 'secondary';\n        this.state = '';\n        this.disabled = false;\n        this.fitted = false;\n        this.progress = false;\n        this.type = 'button';\n    }\n    render() {\n        const classes = {\n            'progress': this.progress,\n            'block': this.fitted,\n            'primary': this.priority === 'primary',\n            'secondary': this.priority === 'secondary',\n            'tertiary': this.priority === 'tertiary',\n            'success': this.state === 'success',\n            'error': this.state === 'error',\n        };\n        return html `\n      ${this.setStyles(styles)}\n      \n      <button\n        type=${this.type}\n        ?disabled=${this.disabled}\n        class=${classMap(classes)}\n      >\n        <slot></slot>\n      </button>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], Button.prototype, \"priority\", void 0);\n__decorate([\n    property({ type: String })\n], Button.prototype, \"state\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Button.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Button.prototype, \"fitted\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Button.prototype, \"progress\", void 0);\n__decorate([\n    property({ type: String })\n], Button.prototype, \"type\", void 0);\nButton = __decorate([\n    customElement('amber-button')\n], Button);\nexport { Button };\n"],"mappings":"AAAA;AAeA;AAIA;ACgBA;AACA;;AAEA;;;AAGA;;AAEA;;;;AAIA;AACA;AACA;;;;;;AASA;ACxCA;AACA;;;;ACjBA;;;AAGA;AACA;;;AAGA;AARA;ADwBA;;;AAMA;AEDA;AACA;;AAEA;AACA;AACA;;;;AAOA","sourceRoot":""}